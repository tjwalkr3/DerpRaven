services:
  api:
    build:
      context: .
      dockerfile: Api.Dockerfile
    image: tjwalkr3/derp-raven-api
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Database=postgres;Userid=derp;Password=1234
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - BlobStorage__ConnectionString=<insert-connection-string-here>
      - BlobStorage__ContainerName=docker-compose-images
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - 8080:8080

  web:
    build:
      context: .
      dockerfile: Web.Dockerfile
      args:
        BASE_ADDRESS: http://127.0.0.1:8080
    image: tjwalkr3/derp-raven-web
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - 8091:80

  db:
    image: docker.io/library/postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=derp
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./config/db-init.sql:/docker-entrypoint-initdb.d/db-init.sql

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./config/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
  
  loki:
    image: grafana/loki:latest

  grafana:
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana-datasource.yml:/etc/grafana/provisioning/datasources/ds.yaml
    ports:
      - 8092:3000

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 8093:9090

volumes:
  postgres: {}
  config: {}